#!/usr/bin/ruby

require 'nyaplot'
require 'json'
require 'date'

# process logfile so that the users get summed up
def process_logfile filename
  data_linechart = {:x => [], :y => []}
  erg_bars = Array.new(24, 0)
  File.open(filename).each do |line|
    record = JSON.parse line
    data_linechart[:x] << DateTime.strptime(record['date'], '%Y-%m-%d %H:%M').hour
    data_linechart[:y] << record['user_stats'].keep_if {|x, y| x == 'JuHa_Blaubeuren'}.values.reduce(:+)

    erg_bars[DateTime.strptime(record['date'], '%Y-%m-%d %H:%M').hour] += record['user_stats'].keep_if {|x, y| x == 'JuHa_Blaubeuren'}.values.reduce(:+)
  end
  [data_linechart, erg_bars]
end

# data_linechart = process_logfile '2018-06-12_ffulm.log'

plot_lines = Nyaplot::Plot.new
plot_lines.x_label 'Hour'
plot_lines.y_label 'Users'
plot_lines.zoom false
#plot_lines.yrange [0, 500]

bar_data = Array.new(24, 0)
days = 0

Dir.glob('../data/ffdata/*.log') do  |filename|
  # next if filename == '.' || filename == '..' || !filename =~ /.*\.log/
  # p filename
  erg_lines, erg_bars = process_logfile filename
  plot_lines.add :line, erg_lines[:x], erg_lines[:y]
  erg_bars.each_with_index { |i, val | bar_data[val] += i }
  # p erg_bars
  days += 1
  #plot_lines.add :line, data_linechart[:x], data_linechart[:y]
end

plot_lines.export_html '../plot_lines.html'

p bar_data

barplot = Nyaplot::Plot.new
barplot.add :bar, Array.new(24) { |i| i.to_s} , bar_data.map { |n| n.to_f / (days == 0 ? 1 : days)  }
barplot.x_label 'Hour'
barplot.y_label 'Total Users'
barplot.export_html '../plot_bar.html'

